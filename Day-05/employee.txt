//Creating csv file
//csv - comma seperated file

//Creates an empty file named employee.csv 
{ ~ }  » touch employee.csv

//Opens the employee.csv file in the vi text editor for editing.
{ ~ }  » vi employee.csv

//Displays the contents of the file one screen at a time (forward only)
{ ~ }  » more employee.csv
ID,Name,Age,Salary,Department
101,Alice,0,70000,Data Science
102,Bob,25,50000,Engineering
103,Charlie,5,80000,Data Science
104,David,40,90000,HR
105,Eve,28,60000,Engineering
106,Frank,38,75000,HR
107,Grace,27,72000,Data Science
108,Hank,32,68000,Engineering
109,Ivy,29,62000,Data Science
110,Jack,31,71000,HR

//Displays the contents of the file one screen at a time.
//But can scroll and see the whole data (forward and backward)
{ ~ }  » less employee.csv

//Displays the first 3 lines of the file.
{ ~ }  » head -3 employee.csv
ID,Name,Age,Salary,Department
101,Alice,0,70000,Data Science
102,Bob,25,50000,Engineering

//Displays the last 3 lines of the file.
{ ~ }  » tail -3 employee.csv
108,Hank,32,68000,Engineering
109,Ivy,29,62000,Data Science
110,Jack,31,71000,HR

//Counts the number of lines in the file.
{ ~ }  » wc -l employee.csv
11 employee.csv

//Prints the number of fields in each line 
{ ~ }  » gawk -F',' '{print NF;exist}' employee.csv
5
5
5
5
5
5
5
5
5
5
5

//Prints the number of fields in the first line only, then exits.
{ ~ }  » gawk -F',' '{print NF;exit}' employee.csv
5
{ ~ }  » tail -3 employee.csv
108,Hank,32,68000,Engineering
109,Ivy,29,62000,Data Science
110,Jack,31,71000,HR

//Prints the 3rd field from each line.
{ ~ }  » gawk -F, '{print $3}' employee.csv
Age
0
25
5
40
28
38
27
32
29
31

//Display the 3rd column (field) from each line
{ ~ }  » cut -d, -f3 employee.csv
Age
0
25
5
40
28
38
27
32
29
31

//Shows the first 7 lines of the file.
{ ~ }  » head -n7 employee.csv
ID,Name,Age,Salary,Department
101,Alice,0,70000,Data Science
102,Bob,25,50000,Engineering
103,Charlie,5,80000,Data Science
104,David,40,90000,HR
105,Eve,28,60000,Engineering
106,Frank,38,75000,HR

//Shows the first 7 lines of the file.
{ ~ }  » head -7 employee.csv
ID,Name,Age,Salary,Department
101,Alice,0,70000,Data Science
102,Bob,25,50000,Engineering
103,Charlie,5,80000,Data Science
104,David,40,90000,HR
105,Eve,28,60000,Engineering
106,Frank,38,75000,HR

//Shows the 7th line of the file.
{ ~ }  » head -7 employee.csv|tail -n1
106,Frank,38,75000,HR

//Shows the 2nd line of the file.
{ ~ }  » head -n2 employee.csv|tail -n1
101,Alice,0,70000,Data Science

//Prints the 2nd field (column) from each line.
{ ~ }  » gawk -F, '{print $2}' employee.csv
Name
Alice
Bob
Charlie
David
Eve
Frank
Grace
Hank
Ivy
Jack

//Prints the 2nd and 3rd fields, separated by space.
{ ~ }  » gawk -F, '{print $2,$3}' employee.csv
Name Age
Alice 0
Bob 25
Charlie 5
David 40
Eve 28
Frank 38
Grace 27
Hank 32
Ivy 29
Jack 31

//Sorts the file based on the 4th column 
{ ~ }  » sort -k 4 employee.csv
101,Alice,0,70000,Data Science
102,Bob,25,50000,Engineering
103,Charlie,5,80000,Data Science
104,David,40,90000,HR
105,Eve,28,60000,Engineering
106,Frank,38,75000,HR
107,Grace,27,72000,Data Science
108,Hank,32,68000,Engineering
109,Ivy,29,62000,Data Science
110,Jack,31,71000,HR
ID,Name,Age,Salary,Department

//Prints the 4th field from each line.
{ ~ }  » gawk -F, '{print $4}' employee.csv
Salary
70000
50000
80000
90000
60000
75000
72000
68000
62000
71000

//Sorts the file by 4th column
{ ~ }  » sort -k4 employee.csv
101,Alice,0,70000,Data Science
102,Bob,25,50000,Engineering
103,Charlie,5,80000,Data Science
104,David,40,90000,HR
105,Eve,28,60000,Engineering
106,Frank,38,75000,HR
107,Grace,27,72000,Data Science
108,Hank,32,68000,Engineering
109,Ivy,29,62000,Data Science
110,Jack,31,71000,HR
ID,Name,Age,Salary,Department

//Sorts the file in reverse order (entire line).
{ ~ }  » sort -r employee.csv
ID,Name,Age,Salary,Department
110,Jack,31,71000,HR
109,Ivy,29,62000,Data Science
108,Hank,32,68000,Engineering
107,Grace,27,72000,Data Science
106,Frank,38,75000,HR
105,Eve,28,60000,Engineering
104,David,40,90000,HR
103,Charlie,5,80000,Data Science
102,Bob,25,50000,Engineering
101,Alice,0,70000,Data Science

//Prints the 4th column and sorts it alphabetically.
{ ~ }  » gawk -F, '{print $4}' employee.csv|sort
50000
60000
62000
68000
70000
71000
72000
75000
80000
90000
Salary

//Prints the 4th column and sorts it numerically.
{ ~ }  » gawk -F, '{print $4}' employee.csv|sort -n
Salary
50000
60000
62000
68000
70000
71000
72000
75000
80000
90000

//Sorts by 3rd column in numeric reverse order, using comma as delimiter.
{ ~ }  » sort -t',' -k3,3nr employee.csv
104,David,40,90000,HR
106,Frank,38,75000,HR
108,Hank,32,68000,Engineering
110,Jack,31,71000,HR
109,Ivy,29,62000,Data Science
105,Eve,28,60000,Engineering
107,Grace,27,72000,Data Science
102,Bob,25,50000,Engineering
103,Charlie,5,80000,Data Science
101,Alice,0,70000,Data Science
ID,Name,Age,Salary,Department

//Sorts by 3rd column using comma as delimiter
{ ~ }  » sort -t',' -k3 employee.csv
101,Alice,0,70000,Data Science
102,Bob,25,50000,Engineering
107,Grace,27,72000,Data Science
105,Eve,28,60000,Engineering
109,Ivy,29,62000,Data Science
110,Jack,31,71000,HR
108,Hank,32,68000,Engineering
106,Frank,38,75000,HR
104,David,40,90000,HR
103,Charlie,5,80000,Data Science
ID,Name,Age,Salary,Department

//Sorts by 4th column numerically using comma as delimiter.
{ ~ }  » sort -t',' -k4,4n employee.csv
ID,Name,Age,Salary,Department
102,Bob,25,50000,Engineering
105,Eve,28,60000,Engineering
109,Ivy,29,62000,Data Science
108,Hank,32,68000,Engineering
101,Alice,0,70000,Data Science
110,Jack,31,71000,HR
107,Grace,27,72000,Data Science
106,Frank,38,75000,HR
103,Charlie,5,80000,Data Science
104,David,40,90000,HR

//Sorts by 4th column in reverse lexicographic order.
{ ~ }  » sort -t',' -k4,4 -r employee.csv
ID,Name,Age,Salary,Department
104,David,40,90000,HR
103,Charlie,5,80000,Data Science
106,Frank,38,75000,HR
107,Grace,27,72000,Data Science
110,Jack,31,71000,HR
101,Alice,0,70000,Data Science
108,Hank,32,68000,Engineering
109,Ivy,29,62000,Data Science
105,Eve,28,60000,Engineering
102,Bob,25,50000,Engineering

//Sorts by 4th column in numeric reverse order.
{ ~ }  » sort -t',' -k4,4 -n -r employee.csv
104,David,40,90000,HR
103,Charlie,5,80000,Data Science
106,Frank,38,75000,HR
107,Grace,27,72000,Data Science
110,Jack,31,71000,HR
101,Alice,0,70000,Data Science
108,Hank,32,68000,Engineering
109,Ivy,29,62000,Data Science
105,Eve,28,60000,Engineering
102,Bob,25,50000,Engineering
ID,Name,Age,Salary,Department

//Sorts first by 2nd column, then by 4th column, both in reverse order.
{ ~ }  » sort -t',' -k2,2 -k4,4 -r employee.csv
ID,Name,Age,Salary,Department
110,Jack,31,71000,HR
109,Ivy,29,62000,Data Science
108,Hank,32,68000,Engineering
107,Grace,27,72000,Data Science
106,Frank,38,75000,HR
105,Eve,28,60000,Engineering
104,David,40,90000,HR
103,Charlie,5,80000,Data Science
102,Bob,25,50000,Engineering
101,Alice,0,70000,Data Science

//Sorts by 2nd column in reverse order.
{ ~ }  » sort -t',' -k2,2 -r employee.csv
ID,Name,Age,Salary,Department
110,Jack,31,71000,HR
109,Ivy,29,62000,Data Science
108,Hank,32,68000,Engineering
107,Grace,27,72000,Data Science
106,Frank,38,75000,HR
105,Eve,28,60000,Engineering
104,David,40,90000,HR
103,Charlie,5,80000,Data Science
102,Bob,25,50000,Engineering
101,Alice,0,70000,Data Science

//Sorts first by 5th column, then by 4th column, both in reverse order.
{ ~ }  » sort -t',' -k5,5 -k4,4 -r employee.csv
104,David,40,90000,HR
106,Frank,38,75000,HR
110,Jack,31,71000,HR
108,Hank,32,68000,Engineering
105,Eve,28,60000,Engineering
102,Bob,25,50000,Engineering
ID,Name,Age,Salary,Department
103,Charlie,5,80000,Data Science
107,Grace,27,72000,Data Science
101,Alice,0,70000,Data Science
109,Ivy,29,62000,Data Science

//Display all the details who do 'Engineering'
{ ~ }  » grep 'Engineering' employee.csv
102,Bob,25,50000,Engineering
105,Eve,28,60000,Engineering
108,Hank,32,68000,Engineering
